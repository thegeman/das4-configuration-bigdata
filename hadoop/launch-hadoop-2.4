#!/usr/bin/env bash

set -e

# Parse the command line
if [ "$#" -ne "1" ]; then
	echo "Usage: ${BASH_SOURCE[0]} <hadoop-dir>" >&2
	exit 1
fi
export HADOOP_HOME="$1"

# Sanity check the specified directory
if [ ! -f "$HADOOP_HOME/bin/hadoop" ]; then
	echo "Invalid setting for Hadoop directory: $HADOOP_HOME" >&2
	echo "Could not find \"$HADOOP_HOME/bin/hadoop\"" >&2
	exit 2
fi

# Get reference to configuration templates
TEMPLATE_DIR=$(readlink -f $(dirname ${BASH_SOURCE[0]}))/hadoop-2.4

# Cleaning up old config
rm -f $HADOOP_HOME/etc/hadoop/masters $HADOOP_HOME/etc/hadoop/slaves

# Read master IP
echo "Enter IP of master:"
read MASTER
sed "s/MASTER/$MASTER/g" $TEMPLATE_DIR/etc/hadoop/core-site.xml.template | sed "s/USERNAME/$USER/g" > $HADOOP_HOME/etc/hadoop/core-site.xml
sed "s/MASTER/$MASTER/g" $TEMPLATE_DIR/etc/hadoop/mapred-site.xml.template | sed "s/USERNAME/$USER/g" > $HADOOP_HOME/etc/hadoop/mapred-site.xml
sed "s/MASTER/$MASTER/g" $TEMPLATE_DIR/etc/hadoop/yarn-site.xml.template | sed "s/USERNAME/$USER/g" > $HADOOP_HOME/etc/hadoop/yarn-site.xml
sed "s/MASTER/$MASTER/g" $TEMPLATE_DIR/etc/hadoop/hdfs-site.xml.template | sed "s/USERNAME/$USER/g" > $HADOOP_HOME/etc/hadoop/hdfs-site.xml
sed -i 's:^[# \t]*export[ \t]\+ JAVA_HOME.*:export JAVA_HOME=/cm/shared/package/sun-jdk/jdk1.7.0:g' $HADOOP_HOME/etc/hadoop/hadoop-env.sh
echo "$MASTER" > $HADOOP_HOME/etc/hadoop/masters

# Read slave IPs
echo "Enter IPs of slave (end with empty line):"
while read SLAVE; do
	[ -z "$SLAVE" ] && break
	echo "$SLAVE" >> $HADOOP_HOME/etc/hadoop/slaves
done

# Prepare master node
ssh $MASTER "rm -rf /local/$USER/hadoop/*; $HADOOP_HOME/bin/hadoop namenode -format"

# Prepare slave nodes
NODEIDS=$(<$HADOOP_HOME/etc/hadoop/slaves)
for NODE in $NODEIDS; do
	ssh $NODE "rm -rf /local/$USER/hadoop/*; mkdir -p /local/$USER/hadoop/tmp; mkdir -p /local/$USER/hadoop/datanode"
done

# Start Hadoop
ssh $MASTER "$HADOOP_HOME/sbin/start-dfs.sh; $HADOOP_HOME/sbin/start-yarn.sh"
